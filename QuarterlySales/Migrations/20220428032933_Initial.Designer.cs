// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuarterlySales.Models;

namespace QuarterlySales.Migrations
{
    [DbContext(typeof(SalesContext))]
    [Migration("20220428032933_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("QuarterlySales.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("DOB")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DOH")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            DOB = new DateTime(1996, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOH = new DateTime(2020, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Joe",
                            LastName = "Burrow",
                            ManagerId = 0
                        },
                        new
                        {
                            EmployeeId = 2,
                            DOB = new DateTime(1985, 9, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOH = new DateTime(2002, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ada",
                            LastName = "Lovelace",
                            ManagerId = 0
                        },
                        new
                        {
                            EmployeeId = 3,
                            DOB = new DateTime(2000, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOH = new DateTime(2021, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ja'marr",
                            LastName = "Chase",
                            ManagerId = 1
                        });
                });

            modelBuilder.Entity("QuarterlySales.Models.Sale", b =>
                {
                    b.Property<int>("SaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double?>("Amount")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("Quarter")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Year")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("SaleId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Sales");

                    b.HasData(
                        new
                        {
                            SaleId = 1,
                            Amount = 23456.0,
                            EmployeeId = 2,
                            Quarter = 4,
                            Year = 2019
                        },
                        new
                        {
                            SaleId = 2,
                            Amount = 34567.0,
                            EmployeeId = 2,
                            Quarter = 1,
                            Year = 2020
                        },
                        new
                        {
                            SaleId = 3,
                            Amount = 19876.0,
                            EmployeeId = 3,
                            Quarter = 4,
                            Year = 2019
                        },
                        new
                        {
                            SaleId = 4,
                            Amount = 31009.0,
                            EmployeeId = 3,
                            Quarter = 1,
                            Year = 2020
                        },
                        new
                        {
                            SaleId = 5,
                            Amount = 344947.0,
                            EmployeeId = 1,
                            Quarter = 1,
                            Year = 2001
                        },
                        new
                        {
                            SaleId = 6,
                            Amount = 165447.0,
                            EmployeeId = 2,
                            Quarter = 1,
                            Year = 2001
                        });
                });

            modelBuilder.Entity("QuarterlySales.Models.Sale", b =>
                {
                    b.HasOne("QuarterlySales.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
